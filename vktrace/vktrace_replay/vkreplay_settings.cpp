/**************************************************************************
 *
 * Copyright 2014-2018 Valve Corporation, Inc.
 * Copyright (C) 2014-2018 LunarG, Inc.
 * Copyright (C) 2019 ARM Limited.
 * All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Author: Peter Lohrmann <peterl@valvesoftware.com>
 * Author: Jon Ashburn <jon@lunarg.com>
 * Author: Courtney Goeltzenleuchter <courtney@LunarG.com>
 * Author: David Pinedo <david@lunarg.com>
 **************************************************************************/
#include "vulkan/vk_layer.h"

#include "vkreplay_settings.h"
// declared as extern in header
vkreplayer_settings g_vkReplaySettings;

static vkreplayer_settings s_defaultVkReplaySettings = {
                                                            .pTraceFilePath = NULL,
                                                            .numLoops = 1,
                                                            .loopStartFrame = 0,
                                                            .loopEndFrame = UINT_MAX,
                                                            .compatibilityMode = true,
                                                            .exitOnAnyError = false,
                                                            .screenshotList = NULL,
                                                            .screenshotColorFormat = NULL,
                                                            .screenshotPrefix = NULL,
                                                            .verbosity = NULL,
                                                            .displayServer = NULL,
                                                            .preloadTraceFile = TRUE,
                                                            .enablePortabilityTable = TRUE,
                                                            .vsyncOff = FALSE,
                                                            .headless = FALSE,
                                                            .selfManageMemAllocation = FALSE,
                                                            .forceSingleWindow = FALSE,
                                                            .forceDisableAF = FALSE,
                                                            .memoryPercentage = 90,
                                                            .premapping = FALSE,
                                                            .enablePipelineCache = FALSE,
                                                            .pipelineCachePath = NULL,
                                                            .forceSyncImgIdx = FALSE,
                                                            .disableRQAndRTPCaptureReplay = 0,
                                                            .specialPatternConfig = 0,
                                                            .forceRayQuery = FALSE,
                                                            .triggerScript = UINT_MAX,
                                                            .pScriptPath = NULL,
                                                            .perfMeasuringMode = 0,
                                                            .printCurrentPacketIndex = 0,
                                                            .enableSyncValidation = FALSE,
                                                            .overrideCreateDeviceFeatures = FALSE,
                                                            .swapChainMinImageCount = 1,
                                                            .instrumentationDelay = 0,
                                                            .preloadChunkSize = 200,
                                                            .skipGetFenceStatus = 0,
                                                            .skipFenceRanges = NULL,
                                                            .finishBeforeSwap = FALSE,
                                                            .forceVariableRateShading = NULL,
                                                            .enableVirtualSwapchain = FALSE,
                                                            .enableVscPerfMode = FALSE,
                                                            .forceUseFilter = UINT_MAX,
                                                       };

vktrace_SettingInfo g_vk_settings_info[] = {
    {"o",
     "Open",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.pTraceFilePath},
     {&s_defaultVkReplaySettings.pTraceFilePath},
     TRUE,
     "The trace file to open and replay."},
    {"t",
     "TraceFile",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.pTraceFilePath},
     {&s_defaultVkReplaySettings.pTraceFilePath},
     TRUE,
     "(Deprecated, use -o or --Open instead) The trace file to replay."},
    {"pltf",
     "PreloadTraceFile",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.preloadTraceFile},
     {&s_defaultVkReplaySettings.preloadTraceFile},
     TRUE,
     "Preload tracefile to memory before replay."},
#if !defined(ANDROID) && defined(PLATFORM_LINUX)
    {"headless",
     "Headless",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.headless},
     {&s_defaultVkReplaySettings.headless},
     TRUE,
     "Replay in headless mode via VK_EXT_headless_surface or VK_ARMX_headless_surface."},
#else
    {"vsyncoff",
     "VsyncOff",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.vsyncOff},
     {&s_defaultVkReplaySettings.vsyncOff},
     TRUE,
     "Turn off vsync to avoid replay being vsync-limited."},
#endif
    {"l",
     "NumLoops",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.numLoops},
     {&s_defaultVkReplaySettings.numLoops},
     TRUE,
     "The number of times to replay the trace file or loop range."},
    {"lsf",
     "LoopStartFrame",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.loopStartFrame},
     {&s_defaultVkReplaySettings.loopStartFrame},
     TRUE,
     "The start frame number of the loop range."},
    {"lef",
     "LoopEndFrame",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.loopEndFrame},
     {&s_defaultVkReplaySettings.loopEndFrame},
     TRUE,
     "The end frame number of the loop range."},
    {"c",
     "CompatibilityMode",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.compatibilityMode},
     {&s_defaultVkReplaySettings.compatibilityMode},
     TRUE,
     "Use compatibiltiy mode, i.e. convert memory indices to replay device indices, default is TRUE."},
    {"s",
     "Screenshot",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.screenshotList},
     {&s_defaultVkReplaySettings.screenshotList},
     TRUE,
     "Comma separated list of frames to take a take snapshots of"},
    {"sf",
     "ScreenshotFormat",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.screenshotColorFormat},
     {&s_defaultVkReplaySettings.screenshotColorFormat},
     TRUE,
     "Color Space format of screenshot files. Formats are UNORM, SNORM, USCALED, SSCALED, UINT, SINT, SRGB"},
    {"x",
     "ExitOnAnyError",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.exitOnAnyError},
     {&s_defaultVkReplaySettings.exitOnAnyError},
     TRUE,
     "Exit if an error occurs during replay, default is FALSE"},
    {"sp",
     "ScreenshotPrefix",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.screenshotPrefix},
     {&s_defaultVkReplaySettings.screenshotPrefix},
     TRUE,
     "/path/to/snapshots/prefix- Must contain full path and a prefix, resulting screenshots will be named prefix-framenumber.ppm"},
    {"pt",
     "EnablePortabilityTableSupport",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.enablePortabilityTable},
     {&s_defaultVkReplaySettings.enablePortabilityTable},
     TRUE,
     "Read portability table if it exists."},
    {"mma",
     "SelfManageMemoryAllocation",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.selfManageMemAllocation},
     {&s_defaultVkReplaySettings.selfManageMemAllocation},
     TRUE,
     "Manage OPTIMAL image's memory allocation by vkreplay. (Deprecated)"},
    {"fsw",
     "ForceSingleWindow",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.forceSingleWindow},
     {&s_defaultVkReplaySettings.forceSingleWindow},
     TRUE,
     "Force single window rendering."},
    {"pmp",
     "memoryPercentage",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.memoryPercentage},
     {&s_defaultVkReplaySettings.memoryPercentage},
     TRUE,
     "Preload vktrace file block occupancy system memory percentage,the default is 50%"},
    {"prm",
     "premapping",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.premapping},
     {&s_defaultVkReplaySettings.premapping},
     TRUE,
     "Premap resources in several vulkan APIs when preloading."},
    {"epc",
     "enablePipelineCache",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.enablePipelineCache},
     {&s_defaultVkReplaySettings.enablePipelineCache},
     TRUE,
     "Write pipeline cache to the disk and use the cache data for the next replay."},
    {"pcp",
     "pipelineCachePath",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.pipelineCachePath},
     {&s_defaultVkReplaySettings.pipelineCachePath},
     TRUE,
     "Set the path for saving the pipeline cache data for the replay."},
    {"fsii",
     "forceSyncImgIdx",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.forceSyncImgIdx},
     {&s_defaultVkReplaySettings.forceSyncImgIdx},
     TRUE,
     "Force sync the acquire next image index."},
    {"drcr",
     "disableRQAndRTPCaptureReplay",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.disableRQAndRTPCaptureReplay},
     {&s_defaultVkReplaySettings.disableRQAndRTPCaptureReplay},
     TRUE,
     "Disable ray query and ray tracing capture replay feature,these three values can be combined to use: accelerationStructureCaptureReplay :0x01, bufferDeviceAddressCaptureReplay :0x02, rayTracingPipelineShaderGroupHandleCaptureReplay :0x04."},
    {"spc",
     "specialPatternConfig",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.specialPatternConfig},
     {&s_defaultVkReplaySettings.specialPatternConfig},
     TRUE,
     "Special Pattern Config: 0:None, 1:PatternA, other reserve."},
    {"frq",
     "forceRayQuery",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.forceRayQuery},
     {&s_defaultVkReplaySettings.forceRayQuery},
     TRUE,
     "Force to replay this trace file as a ray-query one."},
    {"tsf",
     "TriggerScriptOnFrame",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.triggerScript},
     {&s_defaultVkReplaySettings.triggerScript},
     TRUE,
     "Trigger script on a specific frame."},
    {"tsp",
     "scriptPath",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.pScriptPath},
     {&s_defaultVkReplaySettings.pScriptPath},
     TRUE,
     "Trigger script path."},
    {"pmm",
     "perfMeasuringMode",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.perfMeasuringMode},
     {&s_defaultVkReplaySettings.perfMeasuringMode},
     TRUE,
     "Set the performance measuring mode, 0 - off, 1 - on."},
    {"pc",
     "printCurrentPacketIndex",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.printCurrentPacketIndex},
     {&s_defaultVkReplaySettings.printCurrentPacketIndex},
     TRUE,
     "Print current replayed packet index: 0 - off, 1 - only print all frames, 2 - print all calls and frames, > 10 print every N calls and frames."},
    {"esv",
     "enableSyncValidation",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.enableSyncValidation},
     {&s_defaultVkReplaySettings.enableSyncValidation},
     TRUE,
     "Enable the synchronization validation feature of the validation layer."},
    {"ocdf",
     "overrideCreateDeviceFeatures",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.overrideCreateDeviceFeatures},
     {&s_defaultVkReplaySettings.overrideCreateDeviceFeatures},
     TRUE,
     "If some features in vkCreateDevice in trace file don't support by replaying device, disable them."},
    {"scic",
     "swapChainMinImageCount",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.swapChainMinImageCount},
     {&s_defaultVkReplaySettings.swapChainMinImageCount},
     FALSE,
     "Change the swapchain min image count."},
    {"intd",
     "instrumentationDelay",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.instrumentationDelay},
     {&s_defaultVkReplaySettings.instrumentationDelay},
     TRUE,
     "Delay in microseconds that the retracer should sleep for after each present call in the measurement range."},
    {"plcs",
     "preloadChunkSize",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.preloadChunkSize},
     {&s_defaultVkReplaySettings.preloadChunkSize},
     FALSE,
     "Set the chunk size for preloading vktrace file,the default is 200(MB)."},
    {"sgfs",
     "skipGetFenceStatus",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.skipGetFenceStatus},
     {&s_defaultVkReplaySettings.skipGetFenceStatus},
     TRUE,
     "Skip vkGetFenceStatus() calls, 0 - Not skip; 1 - Skip all unsuccessful calls; 2 - Skip all calls."},
    {"sfr",
     "skipFenceRanges",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.skipFenceRanges},
     {&s_defaultVkReplaySettings.skipFenceRanges},
     TRUE,
     "Ranges to skip fences in, defaults to none. No effect if skipGetFenceStatus is not set. Format: START_FRAME1-END_FRAME1,START_FRAME2-END_FRAME2,... (all ranges are fully inclusive of both start and end frame)."},
    {"fbw",
     "finishBeforeSwap",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.finishBeforeSwap},
     {&s_defaultVkReplaySettings.finishBeforeSwap},
     TRUE,
     "inject the vkDeviceWaitIdle function before vkQueuePresent."},
    {"fvrs",
     "forceVariableRateShading",
     VKTRACE_SETTING_STRING,
     {&g_vkReplaySettings.forceVariableRateShading},
     {&s_defaultVkReplaySettings.forceVariableRateShading},
     TRUE,
     "Force to enable pipeline shading rate and set fragment size with [width,height], other types of VRS will be overriden."},
    {"evsc",
     "enableVirtualSwapchain",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.enableVirtualSwapchain},
     {&s_defaultVkReplaySettings.enableVirtualSwapchain},
     TRUE,
     "Enable virtual swapchain."},
    {"vscpm",
     "enableVscPerfMode",
     VKTRACE_SETTING_BOOL,
     {&g_vkReplaySettings.enableVscPerfMode},
     {&s_defaultVkReplaySettings.enableVscPerfMode},
     TRUE,
     "Enable virtual swapchain performance mode."},
    {"fuf",
     "forceUseFilter",
     VKTRACE_SETTING_UINT,
     {&g_vkReplaySettings.forceUseFilter},
     {&s_defaultVkReplaySettings.forceUseFilter},
     TRUE,
     "force filter to fuf value. if NEAREST = 0, LINEAR = 1, CUBIC_EXT = CUBIC_IMG = 2, then only change linear filter to fuf value,\
      if NEAREST = 256+0, LINEAR = 256+1, CUBIC_EXT = CUBIC_IMG = 256+2, then change any filter to fuf value"
    }
};

vktrace_SettingGroup g_vkReplaySettingGroup = { "vkreplay_vk", sizeof(g_vk_settings_info) / sizeof(g_vk_settings_info[0]), &g_vk_settings_info[0], nullptr };

void apply_layerSettings_overrides() {
#if 0
    setLayerOptionEnum("DrawStateReportFlags", g_vkReplaySettings.drawStateReportFlags);
    setLayerOptionEnum("DrawStateDebugAction", g_vkReplaySettings.drawStateDebugAction);
    setLayerOptionEnum("MemTrackerReportFlags", g_vkReplaySettings.memTrackerReportFlags);
    setLayerOptionEnum("MemTrackerDebugAction", g_vkReplaySettings.memTrackerDebugAction);
    setLayerOptionEnum("ObjectTrackerReportFlags", g_vkReplaySettings.objectTrackerReportFlags);
    setLayerOptionEnum("ObjectTrackerDebugAction", g_vkReplaySettings.objectTrackerDebugAction);
#endif
}
